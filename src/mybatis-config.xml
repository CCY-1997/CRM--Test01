<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!-- properties：配置属性文件路径 -->
    <properties resource="db.properties"/>

    <!--
        settings：设置与数据库交互的环境
        用不到，不需要

        如果遇到海量级别的数据，我们如何去调高查询的效率？

        基本操作：
            对于常用的查询条件的字段，设置索引
        高级操作：
            使用nosql数据库，redis
        专业操作：
            针对于电商行业使用，搜索引擎： Elasticsearch 与 Solr
     -->
    <!--<settings>
        <setting name="" value=""/>
    </settings>-->

    <!-- mapper映射文件中的domain起别名 -->
    <typeAliases>
        <!--
            方式一：为指定的类分别起别名，别名的命名自定义
            type：要为那个domain起别名， 全路径名称。
            alias：起别名的名字
        -->
        <!-- <typeAlias type="com.bjpowernode.domain.Student" alias="stu"/>-->

        <!--    *******使用居多********
            方式二：使用package标签批量起别名
            别名是MyBatis默认我们取好的，命令不是自己决定，别名为类名（类名字母不区分大小写）

            name：指定一个包结构，表示在该包下，所有的domain自动起好了别名
        -->
        <package name="com/bjpowernode/domain"/>
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!-- 方式一：使用resource属性，指定mapper映射文件 -->
        <!--<mapper resource="com/bjpowernode/dao/StudentDao.xml"/>-->

        <!-- 方式二：使用class属性，找到dao层接口的全路径
            使用较少
        -->
        <!--<mapper class="com.bjpowernode.dao.StudentDao"/>-->

        <!--
            方式三：批量注册
            name属性：指向dao层的包，表示在该dao包下，所有的mapper映射文件自动注册
        -->
        <package name="com.bjpowernode.dao"/>
    </mappers>
</configuration>